package rina.messages;
//option optimize_for = LITE_RUNTIME;
import "ApplicationProcessNamingInfoMessage.proto";
import "QoSSpecification.proto";
import "ConnectionPoliciesMessage.proto";

message connectionId_t {  //information to identify a connection
	optional uint32 qosId = 1; 				//identifies the QoS cube under which this flow is classified
	optional uint32 sourceCEPId = 2; 		//identifies the source connection endpoint (unique within the source IPC process)
	optional uint32 destinationCEPId = 3; 	//identifies the destination connection endpoint (unique within the destination IPC process)
}

message Flow{  //Contains the information to setup a new flow
	required applicationProcessNamingInfo_t sourceNamingInfo = 1;  			//The naming information of the source application process
	required applicationProcessNamingInfo_t destinationNamingInfo = 2; 		//The naming information of the destination application process
	required uint64 sourcePortId = 3; 										//The port id allocated to this flow by the source IPC process
	optional uint64 destinationPortId = 4; 									//The port id allocated to this flow by the destination IPC process
	required uint64 sourceAddress = 5; 										//The address of the source IPC process for this flow
	optional uint64 destinationAddress = 6; 									//The address of the destination IPC process for this flow
	repeated connectionId_t connectionIds = 7; 								//The identifiers of all the connections that can be used to support this flow during its lifetime
	optional uint32 currentConnectionIdIndex = 8;							//Identifies the index of the current active connection in the flow
	optional uint32 state = 9; 												//
	optional qosSpecification_t qosParameters = 10; 			//the QoS parameters specified by the application process that requested this flow
	optional dtpConfig_t dtpConfig = 12;                  //the configuration for the policies and parameters of this connection's DTP
	optional dtcpConfig_t dtcpConfig = 13;                  //the configuration for the policies and parameters of this connection's DTCP
	optional bytes accessControl = 14; 										// ?
	optional uint32 maxCreateFlowRetries = 15; 								//Maximum number of retries to create the flow before giving up
	optional uint32 createFlowRetries = 16; 								//The current number of retries
	optional uint32 hopCount = 17; 									        //While the search rules that generate the forwarding table should allow for a natural termination condition, it seems wise to have the means to enforce termination
}
