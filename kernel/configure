#!/bin/bash

HAVE_VMPI="n"
TCP_UDP_BUFFER_SIZE=1500
INSTALL_PREFIX="/"
LIBMODPREFIX=""
KERNBUILDDIR="/lib/modules/`uname -r`/build"
REGRESSION_TESTS="n"
CONFIG_RINA_DTCP_RCVR_ACK="y"
CONFIG_RINA_DTCP_RCVR_ACK_ATIMER="n"

# Option parsing
while [[ $# > 0 ]]
do
    key="$1"
    case $key in
        "--with-vmpi")
        HAVE_VMPI="y"
        ;;

        "--regression-tests")
        REGRESSION_TESTS="y"
        ;;

        "--tcp-udp-buffer-size")
        if [ -n "$2" ]; then
            TCP_UDP_BUFFER_SIZE=$2
            shift
        else
            echo "--tcp-udp-buffer-size requires a value argument"
            exit 255
        fi
        ;;

        "--libmodprefix")
        if [ -n "$2" ]; then
            LIBMODPREFIX=$2
            shift
        else
            echo "--libmodprefix requires a path argument"
            exit 255
        fi
        ;;

        "--kernbuilddir")
        if [ -n "$2" ]; then
            KERNBUILDDIR=$2
            shift
        else
            echo "--kernbuilddir requires a path argument"
            exit 255
        fi
        ;;

        *)
        echo "Unknown option '$key'"
        exit 255
        ;;
    esac
    shift
done

# Check if kernel headers are there for out-of-tree build
if [ ! -d $KERNBUILDDIR ]; then
    printmsg "Cannot find '$KERNBUILDDIR' kernel build directory"
    printmsg "Make sure headers for the running kernel are installed"
    exit 255
fi

# Generate symbolic links for common code
(
ln -sf ../common/ker-numtables.c ker-numtables.c
ln -sf ../common/serdes-utils.c serdes-utils.c
)

# Generate the main Makefile
cp Makefile.in Makefile
sed -i "s|@HAVE_VMPI@|${HAVE_VMPI}|g" Makefile
sed -i "s|@REGRESSION_TESTS@|${REGRESSION_TESTS}|g" Makefile
sed -i "s|@TCP_UDP_BUFFER_SIZE@|${TCP_UDP_BUFFER_SIZE}|g" Makefile
sed -i "s|@INSTALL_MOD_PATH@|${INSTALL_PREFIX}${LIBMODPREFIX}|g" Makefile
sed -i "s|@KERNBUILDDIR@|$KERNBUILDDIR|g" Makefile
sed -i "s|@ROOTDIR@|$PWD|g" Makefile
sed -i "s|@CONFIG_RINA_DTCP_RCVR_ACK@|${CONFIG_RINA_DTCP_RCVR_ACK}|g" Makefile
sed -i "s|@CONFIG_RINA_DTCP_RCVR_ACK_ATIMER@|${CONFIG_RINA_DTCP_RCVR_ACK_ATIMER}|g" Makefile

# Prepare VMPI
if [ $HAVE_VMPI == "y" ]; then
    cd kernel/vmpi
    git clean -fdx .
    tar -zxvf vmpi-*.tar.gz
    rm vmpi/vmpi-bufs.c vmpi/vmpi-bufs.h
    mv vmpi/* .
    rm -rf vmpi
    # Delete the vmpi-bufs module line
    sed -i '/vmpi-bufs/d' Makefile
    # Insert a line to set include directives
    sed -i '1 i \
    EXTRA_CFLAGS := -I$(PWD)/../include' Makefile
    cd ../..
fi

# Generate other makefiles
cp ipcps/Makefile.in ipcps/Makefile
cp rinarp/Makefile.in rinarp/Makefile
cp vmpi/Makefile.in vmpi/Makefile
